apiVersion: v1
kind: Template
metadata:
  name: apiman-elastic
objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${ELASTIC_NAME}"
    labels:
      app: "${ELASTIC_NAME}"
  spec:
    replicas: 1
    selector:
      app: elasticsearch
      deploymentconfig: elasticsearch
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: elasticsearch
          deploymentconfig: elasticsearch
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          image: agc93/elasticsearch-openshift
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
          - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            name: elasticsearch-config
            subPath: elasticsearch.yml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: elasticsearch-data
            persistentVolumeClaim:
              claimName: elasticsearch-storage
          - name: elasticsearch-config
            configMap:
              defaultMode: 420
              name: elasticsearch-config
    test: false

- apiVersion: v1
  data:
      elasticsearch.yml: |-
        cluster.name: "docker-cluster"
        network.host: 0.0.0.0

        # minimum_master_nodes need to be explicitly set when bound on a public IP
        # set to 1 to allow single node clusters
        # Details: https://github.com/elastic/elasticsearch/pull/17288
        discovery.zen.minimum_master_nodes: 1

        # Disable
        xpack.security.enabled: false

  kind: ConfigMap
  metadata:
    name: elasticsearch-config

- apiVersion: v1
  kind: Service
  metadata:
    name: "${ELASTIC_NAME}"
    labels:
      app: "${ELASTIC_NAME}"
  spec:
    ports:
    - name: 9200-tcp
      port: 9200
      protocol: TCP
      targetPort: 9200
    - name: 9300-tcp
      port: 9300
      protocol: TCP
      targetPort: 9300
    selector:
      deploymentconfig: "${ELASTIC_NAME}"

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: elasticsearch-storage
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi

parameters:
- name: "ELASTIC_NAME"
  value: "apiman-elastic"
- name: "CLUSTER_NAME"
  value: "apiman-elastic"
